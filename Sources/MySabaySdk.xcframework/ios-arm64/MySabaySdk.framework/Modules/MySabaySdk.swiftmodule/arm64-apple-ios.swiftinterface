// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MySabaySdk
import Apollo
import CommonCrypto
import Dispatch
import FBSDKLoginKit
import Foundation
import KeychainSwift
import Kingfisher
import MatomoTracker
@_exported import MySabaySdk
import PhoneNumberKit
import ReSwift
import StoreKit
import Swift
import SwiftyStoreKit
import UIKit
import WebKit
public enum MSAppState : ReSwift.StateType {
  case none
  case login(MySabaySdk.MSLoginState)
  case purchase(MySabaySdk.MSPurchaseState)
  case resendPhone(MySabaySdk.MSResendCodeState)
  case providerGroup(MySabaySdk.MSProviderGroupState)
  case provider(MySabaySdk.MSPaymentProviderState)
  case product(MySabaySdk.MSStoreProductState)
  case oneTime(MySabaySdk.MSPurchaseOneTimeOpenState)
  case profile(MySabaySdk.MSUserProfileState)
  case auth(MySabaySdk.MSAuthState)
}
public enum MSLoginState {
  case success(MySabaySdk.MSToken)
  case failure(Swift.Error)
}
public enum MSPurchaseState {
  case success(MySabaySdk.MSPurchase)
  case failure(Swift.Error)
}
public enum MSResendCodeState {
  case resend(Swift.String)
}
public enum MSProviderGroupState {
  case groupSelected(MySabaySdk.MSPsProviderGroup)
  case groupConfirmed(MySabaySdk.MSPsProviderGroup)
}
public enum MSPaymentProviderState {
  case providerConfirmed(MySabaySdk.MSPsProvider)
  case providerDialogClosed(Swift.String)
}
public enum MSStoreProductState {
  case productConfirmed(MySabaySdk.MSStoreProduct)
}
public enum MSPurchaseOneTimeOpenState {
  case proceed(MySabaySdk.MSPaymentDetail, Swift.String)
  case success(MySabaySdk.MSInvoice)
}
public enum MSUserProfileState {
  case reloadProfile(Swift.String)
  case mySabayIdCopied(Swift.String)
}
public enum MSAuthState {
  case loginPhoneWithOtp(Swift.String)
  case detectMySabayRelatedToPhone(Swift.String, Swift.String)
  case createNewMySabayAccount
  case createNewMySabayAccountWithPhone(Swift.String)
  case createNewMySabayAccountWithPhoneWithOtp(Swift.String, Swift.String, Swift.String)
}
public struct MSTrackingEvent {
  public var category: Swift.String!
  public var action: Swift.String!
  public var name: Swift.String!
  public var value: Foundation.NSNumber?
  public init()
}
public struct MSProxyPsProvider {
  public var balance: Swift.Double!
  public var price: Swift.Double!
  public var currency: MySabaySdk.MSCurrency?
  public var provider: MySabaySdk.MSPsProvider?
}
public struct MSPaymentDetail {
  public var id: Swift.String!
  public var name: Swift.String!
  public var issueCurrencies: [Swift.String?]!
  public var requestUrl: Swift.String!
  public var packageId: Swift.String!
  public var hash: Swift.String!
  public var signature: Swift.String!
  public var publicKey: Swift.String!
  public var additionalHeader: MySabaySdk.checkout_JSONObject?
  public var additionalBody: MySabaySdk.checkout_JSONObject?
  public var deeplink: Swift.String!
}
public protocol MSOtpFieldViewDelegate : AnyObject {
  func becomeFirstResponsorToFieldIndex(index: Swift.Int) -> Swift.Bool
  func hasFullfilledOtpCode(code: Swift.String)
  func hasEnteredAllOtpCode(all: Swift.Bool) -> Swift.Bool
}
public enum MsOtpDisplayType : Swift.Int {
  case circular
  case roundedCorner
  case square
  case diamond
  case underlinedBottom
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
public enum MSOtpKeyboardType : Swift.Int {
  case numeric
  case alphabet
  case alphaNumeric
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class MSOtpFieldView : UIKit.UIView {
  weak public var delegate: MySabaySdk.MSOtpFieldViewDelegate?
  public var displayType: MySabaySdk.MsOtpDisplayType
  public var fieldsCount: Swift.Int
  public var otpInputType: MySabaySdk.MSOtpKeyboardType
  public var fieldFont: UIKit.UIFont
  public var fieldTextColor: UIKit.UIColor
  public var secureEntry: Swift.Bool
  public var hideEnteredText: Swift.Bool
  public var requireCursor: Swift.Bool
  public var cursorColor: UIKit.UIColor
  public var fieldSize: CoreGraphics.CGFloat
  public var separatorSpace: CoreGraphics.CGFloat
  public var fieldBorderWidth: CoreGraphics.CGFloat
  public var shouldAllowIntermediateEditing: Swift.Bool
  public var defaultBackgroundColor: UIKit.UIColor
  public var filledBackgroundColor: UIKit.UIColor
  public var defaultBorderColor: UIKit.UIColor
  public var filledBorderColor: UIKit.UIColor
  public var errorBorderColor: UIKit.UIColor?
  public var secureEntryData: [Swift.String]
  @objc override dynamic public func awakeFromNib()
  public func initializeUI()
  public func initializeOTPFields()
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension MSOtpFieldView : UIKit.UITextFieldDelegate {
  @objc dynamic public func textFieldShouldBeginEditing(_ textField: UIKit.UITextField) -> Swift.Bool
  @objc dynamic public func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
}
public protocol ExecutionContext {
  func execute(_ work: @escaping () -> Swift.Void)
}
extension DispatchQueue : MySabaySdk.ExecutionContext {
  public func execute(_ work: @escaping () -> Swift.Void)
}
final public class InvalidatableQueue : MySabaySdk.ExecutionContext {
  public init(queue: Dispatch.DispatchQueue = .main)
  final public func invalidate()
  final public func execute(_ work: @escaping () -> Swift.Void)
  @objc deinit
}
final public class MSPromise<Value> {
  public init()
  public init(value: Value)
  public init(error: Swift.Error)
  convenience public init(queue: Dispatch.DispatchQueue = DispatchQueue.global(qos: .userInitiated), work: @escaping (@escaping (Value) -> Swift.Void, @escaping (Swift.Error) -> Swift.Void) throws -> Swift.Void)
  @discardableResult
  final public func then<NewValue>(on queue: MySabaySdk.ExecutionContext = DispatchQueue.main, _ onFulfilled: @escaping (Value) throws -> MySabaySdk.MSPromise<NewValue>) -> MySabaySdk.MSPromise<NewValue>
  @discardableResult
  final public func then<NewValue>(on queue: MySabaySdk.ExecutionContext = DispatchQueue.main, _ onFulfilled: @escaping (Value) throws -> NewValue) -> MySabaySdk.MSPromise<NewValue>
  @discardableResult
  final public func then(on queue: MySabaySdk.ExecutionContext = DispatchQueue.main, _ onFulfilled: @escaping (Value) -> Swift.Void, _ onRejected: @escaping (Swift.Error) -> Swift.Void = { _ in }) -> MySabaySdk.MSPromise<Value>
  @discardableResult
  final public func `catch`(on queue: MySabaySdk.ExecutionContext = DispatchQueue.main, _ onRejected: @escaping (Swift.Error) -> Swift.Void) -> MySabaySdk.MSPromise<Value>
  final public func reject(_ error: Swift.Error)
  final public func fulfill(_ value: Value)
  final public var isPending: Swift.Bool {
    get
  }
  final public var isFulfilled: Swift.Bool {
    get
  }
  final public var isRejected: Swift.Bool {
    get
  }
  final public var value: Value? {
    get
  }
  final public var error: Swift.Error? {
    get
  }
  @objc deinit
}
public enum MSCurrency {
  case khr
  case usd
  case sbc
  case sbg
  case abs
  public static func == (a: MySabaySdk.MSCurrency, b: MySabaySdk.MSCurrency) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
public enum MSPurchaseType : Swift.String {
  case unknown
  case iap
  case onetime
  case preauth
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
  public init?(rawValue: Swift.String)
}
public struct MSBalance {
  public var balance: Swift.Int!
  public var assetCode: Swift.String!
}
public struct MSPsProviderGroup {
  public var order: Swift.Int!
  public var type: MySabaySdk.MSPurchaseType!
  public var name: Swift.String!
  public var providers: [MySabaySdk.MSPsProvider]
  public var proxyProvider: MySabaySdk.MSProxyPsProvider!
  public var isSelected: Swift.Bool {
    get
    set
  }
}
public struct MSToken {
  public let accessToken: MySabaySdk.MSAccessToken!
  public let refreshToken: MySabaySdk.MSRefreshToken!
}
public struct MSPurchase {
  public var invoice: MySabaySdk.MSInvoice!
  public var type: MySabaySdk.MSPurchaseType!
}
public enum MSTheme {
  case dark
  case light
  public static func == (a: MySabaySdk.MSTheme, b: MySabaySdk.MSTheme) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
public typealias MSMySabayResultHandler<T> = (Swift.Result<T, Swift.Error>) -> Swift.Void
public protocol MSMySabaySDKProtocol : MySabaySdk.MSMySabaySDK {
  static func configure(configure: MySabaySdk.MSConfigure)
  func completeTransactions()
  func openLoginScreen(resultHandler: @escaping MySabaySdk.MSMySabayResultHandler<MySabaySdk.MSToken>)
  func openStoreScreen(resultHandler: @escaping MySabaySdk.MSMySabayResultHandler<MySabaySdk.MSPurchase>)
  func loginGuest() -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func loginWithPhone(phoneNumber: Swift.String) -> MySabaySdk.MSPromise<(Swift.String, Swift.Bool, Swift.String)>
  func loginWithMySabay(username: Swift.String, password: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func loginWithFacebook(token: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func verifyOtp(phoneNumber: Swift.String, otp: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func verifyMySabay(username: Swift.String, password: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func checkExistingMySabayUsername(username: Swift.String) -> MySabaySdk.MSPromise<Swift.Bool>
  func requestCreatingMySabayWithPhone(phoneNumber: Swift.String) -> MySabaySdk.MSPromise<(Swift.Bool?, Swift.String?)>
  func createMySabayWithPhone(username: Swift.String, password: Swift.String, phoneNumber: Swift.String, otpCode: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func registerMySabayAccount(username: Swift.String, password: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func getUserProfile() -> MySabaySdk.MSPromise<MySabaySdk.MSUserProfile>
  func getLocalPaymentStatus() -> MySabaySdk.MSPromise<Swift.Bool>
  func verifyTokens() -> MySabaySdk.MSPromise<Swift.Bool>
  func refreshTokens() -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  func logout(all: Swift.Bool) -> MySabaySdk.MSPromise<Swift.String>
  func getStoreProducts() -> MySabaySdk.MSPromise<[MySabaySdk.MSStoreProduct]>
  func purchaseIapProduct(productIdentifier: Swift.String) -> MySabaySdk.MSPromise<PurchaseDetails>
  func fetchInAppPurchaseReceiptData() -> MySabaySdk.MSPromise<Foundation.Data>
  func verifyInAppPurcahse(paymentDetail: MySabaySdk.MSPaymentDetail, invoiceId: Swift.String, receiptData: Foundation.Data) -> MySabaySdk.MSPromise<Swift.String>
  func getPaymentServiceProvidersByProduct(productId: Swift.String) -> MySabaySdk.MSPromise<[MySabaySdk.MSPsProviderGroup]>
  func createInvoice(items: [MySabaySdk.invoice_JSONObject], amount: Swift.Double, currency: MySabaySdk.MSCurrency) -> MySabaySdk.MSPromise<MySabaySdk.MSInvoice>
  func createPaymentDetail(pspId: Swift.String, invoiceId: Swift.String) -> MySabaySdk.MSPromise<(MySabaySdk.MSPaymentDetail, Swift.String)>
  func createPreAuthPayment(paymentDetail: MySabaySdk.MSPaymentDetail, invoiceId: Swift.String) -> MySabaySdk.MSPromise<Swift.String>
  func createOneTimePayment(paymentDetail: MySabaySdk.MSPaymentDetail, invoiceId: Swift.String) -> MySabaySdk.MSPromise<Swift.String>
  func checkPaymentStatus(invoiceId: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSInvoice>
  func scheduledCheckPaymentStatus(invoiceId: Swift.String, interval: Foundation.TimeInterval, repeats: Swift.Int) -> MySabaySdk.MSPromise<MySabaySdk.MSInvoice>
  func setCustomUserId(userId: Swift.String)
  func trackPageView(screens: [Swift.String])
  func trackEvent(event: MySabaySdk.MSTrackingEvent)
  func trackOrder(order: MySabaySdk.MSTrackingOrder)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class MSMySabaySDK : ObjectiveC.NSObject, MySabaySdk.MSMySabaySDKProtocol, ReSwift.StoreSubscriber {
  public static let shared: MySabaySdk.MSMySabaySDK
  public typealias StoreSubscriberStateType = MySabaySdk.MSAppState
  public static func configure(configure: MySabaySdk.MSConfigure = MSConfigure())
  public func completeTransactions()
  public func openLoginScreen(resultHandler: @escaping MySabaySdk.MSMySabayResultHandler<MySabaySdk.MSToken>)
  public func openStoreScreen(resultHandler: @escaping MySabaySdk.MSMySabayResultHandler<MySabaySdk.MSPurchase>)
  public func loginGuest() -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func loginWithPhone(phoneNumber: Swift.String) -> MySabaySdk.MSPromise<(Swift.String, Swift.Bool, Swift.String)>
  public func loginWithMySabay(username: Swift.String, password: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func loginWithFacebook(token: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func verifyOtp(phoneNumber: Swift.String, otp: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func verifyMySabay(username: Swift.String, password: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func checkExistingMySabayUsername(username: Swift.String) -> MySabaySdk.MSPromise<Swift.Bool>
  public func requestCreatingMySabayWithPhone(phoneNumber: Swift.String) -> MySabaySdk.MSPromise<(Swift.Bool?, Swift.String?)>
  public func createMySabayWithPhone(username: Swift.String, password: Swift.String, phoneNumber: Swift.String, otpCode: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func registerMySabayAccount(username: Swift.String, password: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func getUserProfile() -> MySabaySdk.MSPromise<MySabaySdk.MSUserProfile>
  public func getLocalPaymentStatus() -> MySabaySdk.MSPromise<Swift.Bool>
  public func verifyTokens() -> MySabaySdk.MSPromise<Swift.Bool>
  public func refreshTokens() -> MySabaySdk.MSPromise<MySabaySdk.MSToken>
  public func logout(all: Swift.Bool = false) -> MySabaySdk.MSPromise<Swift.String>
  public func purchaseIapProduct(productIdentifier: Swift.String) -> MySabaySdk.MSPromise<PurchaseDetails>
  public func fetchInAppPurchaseReceiptData() -> MySabaySdk.MSPromise<Foundation.Data>
  public func verifyInAppPurcahse(paymentDetail: MySabaySdk.MSPaymentDetail, invoiceId: Swift.String, receiptData: Foundation.Data) -> MySabaySdk.MSPromise<Swift.String>
  public func getStoreProducts() -> MySabaySdk.MSPromise<[MySabaySdk.MSStoreProduct]>
  public func getPaymentServiceProvidersByProduct(productId: Swift.String) -> MySabaySdk.MSPromise<[MySabaySdk.MSPsProviderGroup]>
  public func createInvoice(items: [MySabaySdk.invoice_JSONObject], amount: Swift.Double, currency: MySabaySdk.MSCurrency) -> MySabaySdk.MSPromise<MySabaySdk.MSInvoice>
  public func createPaymentDetail(pspId: Swift.String, invoiceId: Swift.String) -> MySabaySdk.MSPromise<(MySabaySdk.MSPaymentDetail, Swift.String)>
  public func createPreAuthPayment(paymentDetail: MySabaySdk.MSPaymentDetail, invoiceId: Swift.String) -> MySabaySdk.MSPromise<Swift.String>
  public func createOneTimePayment(paymentDetail: MySabaySdk.MSPaymentDetail, invoiceId: Swift.String) -> MySabaySdk.MSPromise<Swift.String>
  public func checkPaymentStatus(invoiceId: Swift.String) -> MySabaySdk.MSPromise<MySabaySdk.MSInvoice>
  public func scheduledCheckPaymentStatus(invoiceId: Swift.String, interval: Foundation.TimeInterval, repeats: Swift.Int) -> MySabaySdk.MSPromise<MySabaySdk.MSInvoice>
  public func setCustomUserId(userId: Swift.String)
  public func trackPageView(screens: [Swift.String])
  public func trackEvent(event: MySabaySdk.MSTrackingEvent)
  public func trackOrder(order: MySabaySdk.MSTrackingOrder)
  @objc deinit
}
extension MSMySabaySDK {
  public func newState(state: MySabaySdk.MSAppState)
}
public struct MSInvoiceItem {
}
public struct MSTrackingOrder {
  public var id: Swift.String!
  public var items: [OrderItem]!
  public var revenue: Swift.Float!
  public var subTotal: Swift.Float?
  public var tax: Swift.Float?
  public var shippingCost: Swift.Float?
  public var discount: Swift.Float?
  public init()
}
@objc @_hasMissingDesignatedInitializers public class MSRefreshToken : ObjectiveC.NSObject {
  public static var isValid: Swift.Bool {
    get
  }
  public static var currentToken: MySabaySdk.MSRefreshToken? {
    get
  }
  public var tokenString: Swift.String!
  @objc deinit
  @objc override dynamic public init()
}
public struct invoice_CreateInvoiceInput : Apollo.GraphQLMapConvertible {
  public var graphQLMap: Apollo.GraphQLMap
  public init(items: [MySabaySdk.invoice_JSONObject?], amount: Swift.Double, notes: Swift.Optional<Swift.String?> = nil, ssnTxHash: Swift.Optional<Swift.String?> = nil, currency: Swift.Optional<Swift.String?> = nil, paymentProvider: Swift.Optional<Swift.String?> = nil)
  public var items: [MySabaySdk.invoice_JSONObject?] {
    get
    set
  }
  public var amount: Swift.Double {
    get
    set
  }
  public var notes: Swift.Optional<Swift.String?> {
    get
    set
  }
  public var ssnTxHash: Swift.Optional<Swift.String?> {
    get
    set
  }
  public var currency: Swift.Optional<Swift.String?> {
    get
    set
  }
  public var paymentProvider: Swift.Optional<Swift.String?> {
    get
    set
  }
}
final public class GetPaymentDetailsQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var id: Apollo.GraphQLID
  final public var paymentAddress: Swift.String
  public init(id: Apollo.GraphQLID, paymentAddress: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(checkoutGetPaymentServiceProviderDetailForPayment: MySabaySdk.GetPaymentDetailsQuery.Data.CheckoutGetPaymentServiceProviderDetailForPayment? = nil)
    public var checkoutGetPaymentServiceProviderDetailForPayment: MySabaySdk.GetPaymentDetailsQuery.Data.CheckoutGetPaymentServiceProviderDetailForPayment? {
      get
      set
    }
    public struct CheckoutGetPaymentServiceProviderDetailForPayment : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(id: Apollo.GraphQLID, name: Swift.String? = nil, issueCurrencies: [Swift.String?]? = nil, requestUrl: Swift.String? = nil, packageId: Swift.String? = nil, hash: Swift.String, signature: Swift.String, publicKey: Swift.String, additionalBody: MySabaySdk.checkout_JSONObject? = nil, additionalHeader: MySabaySdk.checkout_JSONObject? = nil, deeplink: Swift.String? = nil)
      public var __typename: Swift.String {
        get
        set
      }
      public var id: Apollo.GraphQLID {
        get
        set
      }
      public var name: Swift.String? {
        get
        set
      }
      public var issueCurrencies: [Swift.String?]? {
        get
        set
      }
      public var requestUrl: Swift.String? {
        get
        set
      }
      public var packageId: Swift.String? {
        get
        set
      }
      public var hash: Swift.String {
        get
        set
      }
      public var signature: Swift.String {
        get
        set
      }
      public var publicKey: Swift.String {
        get
        set
      }
      public var additionalBody: MySabaySdk.checkout_JSONObject? {
        get
        set
      }
      public var additionalHeader: MySabaySdk.checkout_JSONObject? {
        get
        set
      }
      public var deeplink: Swift.String? {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class GetPaymentServiceProviderByProductQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var productId: Apollo.GraphQLID
  public init(productId: Apollo.GraphQLID)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(checkoutGetPaymentServiceProviderForProduct: MySabaySdk.GetPaymentServiceProviderByProductQuery.Data.CheckoutGetPaymentServiceProviderForProduct)
    public var checkoutGetPaymentServiceProviderForProduct: MySabaySdk.GetPaymentServiceProviderByProductQuery.Data.CheckoutGetPaymentServiceProviderForProduct {
      get
      set
    }
    public struct CheckoutGetPaymentServiceProviderForProduct : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(paymentServiceProviders: [MySabaySdk.GetPaymentServiceProviderByProductQuery.Data.CheckoutGetPaymentServiceProviderForProduct.PaymentServiceProvider?]? = nil)
      public var __typename: Swift.String {
        get
        set
      }
      public var paymentServiceProviders: [MySabaySdk.GetPaymentServiceProviderByProductQuery.Data.CheckoutGetPaymentServiceProviderForProduct.PaymentServiceProvider?]? {
        get
        set
      }
      public struct PaymentServiceProvider : Apollo.GraphQLSelectionSet {
        public static let possibleTypes: [Swift.String]
        public static var selections: [Apollo.GraphQLSelection] {
          get
        }
        public var resultMap: Apollo.ResultMap {
          get
        }
        public init(unsafeResultMap: Apollo.ResultMap)
        public init(type: Swift.String? = nil, providers: [MySabaySdk.GetPaymentServiceProviderByProductQuery.Data.CheckoutGetPaymentServiceProviderForProduct.PaymentServiceProvider.Provider?]? = nil)
        public var __typename: Swift.String {
          get
          set
        }
        public var type: Swift.String? {
          get
          set
        }
        public var providers: [MySabaySdk.GetPaymentServiceProviderByProductQuery.Data.CheckoutGetPaymentServiceProviderForProduct.PaymentServiceProvider.Provider?]? {
          get
          set
        }
        public struct Provider : Apollo.GraphQLSelectionSet {
          public static let possibleTypes: [Swift.String]
          public static var selections: [Apollo.GraphQLSelection] {
            get
          }
          public var resultMap: Apollo.ResultMap {
            get
          }
          public init(unsafeResultMap: Apollo.ResultMap)
          public init(id: Apollo.GraphQLID, name: Swift.String? = nil, code: Swift.String? = nil, packageId: Swift.String? = nil, label: Swift.String? = nil, value: Swift.Int? = nil, additionalBody: MySabaySdk.checkout_JSONObject? = nil, additionalHeader: MySabaySdk.checkout_JSONObject? = nil, type: Swift.String? = nil, status: Swift.Int? = nil, info: MySabaySdk.checkout_JSONObject? = nil, issueCurrencies: [Swift.String?]? = nil, requestUrl: Swift.String? = nil)
          public var __typename: Swift.String {
            get
            set
          }
          public var id: Apollo.GraphQLID {
            get
            set
          }
          public var name: Swift.String? {
            get
            set
          }
          public var code: Swift.String? {
            get
            set
          }
          public var packageId: Swift.String? {
            get
            set
          }
          public var label: Swift.String? {
            get
            set
          }
          public var value: Swift.Int? {
            get
            set
          }
          public var additionalBody: MySabaySdk.checkout_JSONObject? {
            get
            set
          }
          public var additionalHeader: MySabaySdk.checkout_JSONObject? {
            get
            set
          }
          public var type: Swift.String? {
            get
            set
          }
          public var status: Swift.Int? {
            get
            set
          }
          public var info: MySabaySdk.checkout_JSONObject? {
            get
            set
          }
          public var issueCurrencies: [Swift.String?]? {
            get
            set
          }
          public var requestUrl: Swift.String? {
            get
            set
          }
        }
      }
    }
  }
  @objc deinit
}
final public class GetAllProvidersQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var code: Swift.String
  public init(code: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(checkoutGetPaymentServiceProviderList: MySabaySdk.GetAllProvidersQuery.Data.CheckoutGetPaymentServiceProviderList? = nil)
    public var checkoutGetPaymentServiceProviderList: MySabaySdk.GetAllProvidersQuery.Data.CheckoutGetPaymentServiceProviderList? {
      get
      set
    }
    public struct CheckoutGetPaymentServiceProviderList : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(paymentServiceProviderList: [MySabaySdk.GetAllProvidersQuery.Data.CheckoutGetPaymentServiceProviderList.PaymentServiceProviderList?])
      public var __typename: Swift.String {
        get
        set
      }
      public var paymentServiceProviderList: [MySabaySdk.GetAllProvidersQuery.Data.CheckoutGetPaymentServiceProviderList.PaymentServiceProviderList?] {
        get
        set
      }
      public struct PaymentServiceProviderList : Apollo.GraphQLSelectionSet {
        public static let possibleTypes: [Swift.String]
        public static var selections: [Apollo.GraphQLSelection] {
          get
        }
        public var resultMap: Apollo.ResultMap {
          get
        }
        public init(unsafeResultMap: Apollo.ResultMap)
        public init(id: Apollo.GraphQLID, name: Swift.String? = nil, label: Swift.String? = nil, value: Swift.Int? = nil, packageId: Swift.String? = nil, code: Swift.String? = nil, ssnAccountPk: Swift.String? = nil, type: Swift.String? = nil, info: MySabaySdk.checkout_JSONObject? = nil, status: Swift.Int? = nil, issueCurrencies: [Swift.String?]? = nil, additionalBody: MySabaySdk.checkout_JSONObject? = nil, additionalHeader: MySabaySdk.checkout_JSONObject? = nil, deeplink: Swift.String? = nil)
        public var __typename: Swift.String {
          get
          set
        }
        public var id: Apollo.GraphQLID {
          get
          set
        }
        public var name: Swift.String? {
          get
          set
        }
        public var label: Swift.String? {
          get
          set
        }
        public var value: Swift.Int? {
          get
          set
        }
        public var packageId: Swift.String? {
          get
          set
        }
        public var code: Swift.String? {
          get
          set
        }
        public var ssnAccountPk: Swift.String? {
          get
          set
        }
        public var type: Swift.String? {
          get
          set
        }
        public var info: MySabaySdk.checkout_JSONObject? {
          get
          set
        }
        public var status: Swift.Int? {
          get
          set
        }
        public var issueCurrencies: [Swift.String?]? {
          get
          set
        }
        public var additionalBody: MySabaySdk.checkout_JSONObject? {
          get
          set
        }
        public var additionalHeader: MySabaySdk.checkout_JSONObject? {
          get
          set
        }
        public var deeplink: Swift.String? {
          get
          set
        }
      }
    }
  }
  @objc deinit
}
final public class CreateInvoiceMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var input: MySabaySdk.invoice_CreateInvoiceInput?
  public init(input: MySabaySdk.invoice_CreateInvoiceInput? = nil)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(invoiceCreateInvoice: MySabaySdk.CreateInvoiceMutation.Data.InvoiceCreateInvoice? = nil)
    public var invoiceCreateInvoice: MySabaySdk.CreateInvoiceMutation.Data.InvoiceCreateInvoice? {
      get
      set
    }
    public struct InvoiceCreateInvoice : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(invoice: MySabaySdk.CreateInvoiceMutation.Data.InvoiceCreateInvoice.Invoice? = nil)
      public var __typename: Swift.String {
        get
        set
      }
      public var invoice: MySabaySdk.CreateInvoiceMutation.Data.InvoiceCreateInvoice.Invoice? {
        get
        set
      }
      public struct Invoice : Apollo.GraphQLSelectionSet {
        public static let possibleTypes: [Swift.String]
        public static var selections: [Apollo.GraphQLSelection] {
          get
        }
        public var resultMap: Apollo.ResultMap {
          get
        }
        public init(unsafeResultMap: Apollo.ResultMap)
        public init(id: Apollo.GraphQLID, userId: Swift.String? = nil, items: [MySabaySdk.invoice_JSONObject?], amount: Swift.Double? = nil, notes: Swift.String? = nil, serviceCode: Swift.String, ssnTxHash: Swift.String? = nil, paymentProvider: Swift.String? = nil, status: Swift.String, currency: Swift.String? = nil)
        public var __typename: Swift.String {
          get
          set
        }
        public var id: Apollo.GraphQLID {
          get
          set
        }
        public var userId: Swift.String? {
          get
          set
        }
        public var items: [MySabaySdk.invoice_JSONObject?] {
          get
          set
        }
        public var amount: Swift.Double? {
          get
          set
        }
        public var notes: Swift.String? {
          get
          set
        }
        public var serviceCode: Swift.String {
          get
          set
        }
        public var ssnTxHash: Swift.String? {
          get
          set
        }
        public var paymentProvider: Swift.String? {
          get
          set
        }
        public var status: Swift.String {
          get
          set
        }
        public var currency: Swift.String? {
          get
          set
        }
      }
    }
  }
  @objc deinit
}
final public class GetInvoiceQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var invoiceId: Apollo.GraphQLID
  public init(invoiceId: Apollo.GraphQLID)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(invoiceGetInvoiceById: MySabaySdk.GetInvoiceQuery.Data.InvoiceGetInvoiceById? = nil)
    public var invoiceGetInvoiceById: MySabaySdk.GetInvoiceQuery.Data.InvoiceGetInvoiceById? {
      get
      set
    }
    public struct InvoiceGetInvoiceById : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(id: Apollo.GraphQLID, userId: Swift.String? = nil, items: [MySabaySdk.invoice_JSONObject?], amount: Swift.Double? = nil, notes: Swift.String? = nil, serviceCode: Swift.String, ssnTxHash: Swift.String? = nil, paymentProvider: Swift.String? = nil, status: Swift.String, currency: Swift.String? = nil)
      public var __typename: Swift.String {
        get
        set
      }
      public var id: Apollo.GraphQLID {
        get
        set
      }
      public var userId: Swift.String? {
        get
        set
      }
      public var items: [MySabaySdk.invoice_JSONObject?] {
        get
        set
      }
      public var amount: Swift.Double? {
        get
        set
      }
      public var notes: Swift.String? {
        get
        set
      }
      public var serviceCode: Swift.String {
        get
        set
      }
      public var ssnTxHash: Swift.String? {
        get
        set
      }
      public var paymentProvider: Swift.String? {
        get
        set
      }
      public var status: Swift.String {
        get
        set
      }
      public var currency: Swift.String? {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class LoginGuestMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  public init()
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoLoginGuest: MySabaySdk.LoginGuestMutation.Data.SsoLoginGuest)
    public var ssoLoginGuest: MySabaySdk.LoginGuestMutation.Data.SsoLoginGuest {
      get
      set
    }
    public struct SsoLoginGuest : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class LoginWithPhoneNumberMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var phoneNumber: Swift.String
  public init(phoneNumber: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoLoginPhone: MySabaySdk.LoginWithPhoneNumberMutation.Data.SsoLoginPhone)
    public var ssoLoginPhone: MySabaySdk.LoginWithPhoneNumberMutation.Data.SsoLoginPhone {
      get
      set
    }
    public struct SsoLoginPhone : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(verifyMySabay: Swift.Bool, mySabayUsername: Swift.String? = nil, otpExpiry: Swift.String? = nil)
      public var __typename: Swift.String {
        get
        set
      }
      public var verifyMySabay: Swift.Bool {
        get
        set
      }
      public var mySabayUsername: Swift.String? {
        get
        set
      }
      public var otpExpiry: Swift.String? {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class VerifyOtpMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var phoneNumber: Swift.String
  final public var otp: Swift.String
  public init(phoneNumber: Swift.String, otp: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoVerifyOtp: MySabaySdk.VerifyOtpMutation.Data.SsoVerifyOtp)
    public var ssoVerifyOtp: MySabaySdk.VerifyOtpMutation.Data.SsoVerifyOtp {
      get
      set
    }
    public struct SsoVerifyOtp : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class LoginWithMySabayMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var username: Swift.String
  final public var password: Swift.String
  public init(username: Swift.String, password: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoLoginMySabay: MySabaySdk.LoginWithMySabayMutation.Data.SsoLoginMySabay)
    public var ssoLoginMySabay: MySabaySdk.LoginWithMySabayMutation.Data.SsoLoginMySabay {
      get
      set
    }
    public struct SsoLoginMySabay : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class LoginWithFacebookMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var token: Swift.String
  public init(token: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoLoginFacebook: MySabaySdk.LoginWithFacebookMutation.Data.SsoLoginFacebook)
    public var ssoLoginFacebook: MySabaySdk.LoginWithFacebookMutation.Data.SsoLoginFacebook {
      get
      set
    }
    public struct SsoLoginFacebook : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class RefreshTokenMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var refreshToken: Swift.String
  public init(refreshToken: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoRefreshToken: MySabaySdk.RefreshTokenMutation.Data.SsoRefreshToken)
    public var ssoRefreshToken: MySabaySdk.RefreshTokenMutation.Data.SsoRefreshToken {
      get
      set
    }
    public struct SsoRefreshToken : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class VerifyMySabayMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var username: Swift.String
  final public var password: Swift.String
  public init(username: Swift.String, password: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoVerifyMySabay: MySabaySdk.VerifyMySabayMutation.Data.SsoVerifyMySabay)
    public var ssoVerifyMySabay: MySabaySdk.VerifyMySabayMutation.Data.SsoVerifyMySabay {
      get
      set
    }
    public struct SsoVerifyMySabay : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class VerifyTokenQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var accessToken: Swift.String
  public init(accessToken: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoVerifyToken: MySabaySdk.VerifyTokenQuery.Data.SsoVerifyToken)
    public var ssoVerifyToken: MySabaySdk.VerifyTokenQuery.Data.SsoVerifyToken {
      get
      set
    }
    public struct SsoVerifyToken : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(uuid: Swift.String, serviceCode: Swift.String, mysabayUserId: Swift.Int, type: Swift.String)
      public var __typename: Swift.String {
        get
        set
      }
      public var uuid: Swift.String {
        get
        set
      }
      public var serviceCode: Swift.String {
        get
        set
      }
      public var mysabayUserId: Swift.Int {
        get
        set
      }
      public var type: Swift.String {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class CreateMySabayLoginWithPhoneMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var username: Swift.String
  final public var password: Swift.String
  final public var phoneNumber: Swift.String
  final public var otpCode: Swift.String
  public init(username: Swift.String, password: Swift.String, phoneNumber: Swift.String, otpCode: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoCreateMySabayLoginWithPhone: MySabaySdk.CreateMySabayLoginWithPhoneMutation.Data.SsoCreateMySabayLoginWithPhone)
    public var ssoCreateMySabayLoginWithPhone: MySabaySdk.CreateMySabayLoginWithPhoneMutation.Data.SsoCreateMySabayLoginWithPhone {
      get
      set
    }
    public struct SsoCreateMySabayLoginWithPhone : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class SendCreateMySabayWithPhoneOtpMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var phoneNumber: Swift.String
  public init(phoneNumber: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoSendCreateMySabayWithPhoneOtp: MySabaySdk.SendCreateMySabayWithPhoneOtpMutation.Data.SsoSendCreateMySabayWithPhoneOtp)
    public var ssoSendCreateMySabayWithPhoneOtp: MySabaySdk.SendCreateMySabayWithPhoneOtpMutation.Data.SsoSendCreateMySabayWithPhoneOtp {
      get
      set
    }
    public struct SsoSendCreateMySabayWithPhoneOtp : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(verifyMySabay: Swift.Bool, mySabayUsername: Swift.String? = nil, otpExpiry: Swift.String? = nil)
      public var __typename: Swift.String {
        get
        set
      }
      public var verifyMySabay: Swift.Bool {
        get
        set
      }
      public var mySabayUsername: Swift.String? {
        get
        set
      }
      public var otpExpiry: Swift.String? {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class CreateMySabayAccountMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var username: Swift.String
  final public var password: Swift.String
  public init(username: Swift.String, password: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoCreateMySabayLogin: MySabaySdk.CreateMySabayAccountMutation.Data.SsoCreateMySabayLogin)
    public var ssoCreateMySabayLogin: MySabaySdk.CreateMySabayAccountMutation.Data.SsoCreateMySabayLogin {
      get
      set
    }
    public struct SsoCreateMySabayLogin : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(accessToken: Swift.String, refreshToken: Swift.String, expire: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var accessToken: Swift.String {
        get
        set
      }
      public var refreshToken: Swift.String {
        get
        set
      }
      public var expire: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class GetUserProfileQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  public init()
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoUserProfile: MySabaySdk.GetUserProfileQuery.Data.SsoUserProfile)
    public var ssoUserProfile: MySabaySdk.GetUserProfileQuery.Data.SsoUserProfile {
      get
      set
    }
    public struct SsoUserProfile : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(userId: Swift.Int, localPayEnabled: Swift.Bool, wallet: [MySabaySdk.GetUserProfileQuery.Data.SsoUserProfile.Wallet], status: Swift.Int, persona: MySabaySdk.GetUserProfileQuery.Data.SsoUserProfile.Persona)
      public var __typename: Swift.String {
        get
        set
      }
      public var userId: Swift.Int {
        get
        set
      }
      public var localPayEnabled: Swift.Bool {
        get
        set
      }
      public var wallet: [MySabaySdk.GetUserProfileQuery.Data.SsoUserProfile.Wallet] {
        get
        set
      }
      public var status: Swift.Int {
        get
        set
      }
      public var persona: MySabaySdk.GetUserProfileQuery.Data.SsoUserProfile.Persona {
        get
        set
      }
      public struct Wallet : Apollo.GraphQLSelectionSet {
        public static let possibleTypes: [Swift.String]
        public static var selections: [Apollo.GraphQLSelection] {
          get
        }
        public var resultMap: Apollo.ResultMap {
          get
        }
        public init(unsafeResultMap: Apollo.ResultMap)
        public init(balance: Swift.Int, assetCode: Swift.String)
        public var __typename: Swift.String {
          get
          set
        }
        public var balance: Swift.Int {
          get
          set
        }
        public var assetCode: Swift.String {
          get
          set
        }
      }
      public struct Persona : Apollo.GraphQLSelectionSet {
        public static let possibleTypes: [Swift.String]
        public static var selections: [Apollo.GraphQLSelection] {
          get
        }
        public var resultMap: Apollo.ResultMap {
          get
        }
        public init(unsafeResultMap: Apollo.ResultMap)
        public init(uuid: Swift.String)
        public var __typename: Swift.String {
          get
          set
        }
        public var uuid: Swift.String {
          get
          set
        }
      }
    }
  }
  @objc deinit
}
final public class GetUserPersonaQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  public init()
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoUserPersona: MySabaySdk.GetUserPersonaQuery.Data.SsoUserPersona)
    public var ssoUserPersona: MySabaySdk.GetUserPersonaQuery.Data.SsoUserPersona {
      get
      set
    }
    public struct SsoUserPersona : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(uuid: Swift.String, mysabayUserId: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var uuid: Swift.String {
        get
        set
      }
      public var mysabayUserId: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class VerifyExistingMySabayUsernameQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var username: Swift.String
  public init(username: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoExistingLogin: Swift.Bool)
    public var ssoExistingLogin: Swift.Bool {
      get
      set
    }
  }
  @objc deinit
}
final public class LogoutMutation : Apollo.GraphQLMutation {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var refreshToken: Swift.String
  public init(refreshToken: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoDeleteToken: Swift.Int)
    public var ssoDeleteToken: Swift.Int {
      get
      set
    }
  }
  @objc deinit
}
final public class GetServiceInfoQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var serviceCode: Swift.String
  public init(serviceCode: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(ssoService: [MySabaySdk.GetServiceInfoQuery.Data.SsoService])
    public var ssoService: [MySabaySdk.GetServiceInfoQuery.Data.SsoService] {
      get
      set
    }
    public struct SsoService : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(name: Swift.String, code: Swift.String, matomoTrackingId: Swift.String, usdkhr: Swift.Int)
      public var __typename: Swift.String {
        get
        set
      }
      public var name: Swift.String {
        get
        set
      }
      public var code: Swift.String {
        get
        set
      }
      public var matomoTrackingId: Swift.String {
        get
        set
      }
      public var usdkhr: Swift.Int {
        get
        set
      }
    }
  }
  @objc deinit
}
final public class GetProductsByServiceCodeQuery : Apollo.GraphQLQuery {
  final public let operationDefinition: Swift.String
  final public let operationName: Swift.String
  final public var serviceCode: Swift.String
  public init(serviceCode: Swift.String)
  final public var variables: Apollo.GraphQLMap? {
    get
  }
  public struct Data : Apollo.GraphQLSelectionSet {
    public static let possibleTypes: [Swift.String]
    public static var selections: [Apollo.GraphQLSelection] {
      get
    }
    public var resultMap: Apollo.ResultMap {
      get
    }
    public init(unsafeResultMap: Apollo.ResultMap)
    public init(storeListProduct: MySabaySdk.GetProductsByServiceCodeQuery.Data.StoreListProduct? = nil)
    public var storeListProduct: MySabaySdk.GetProductsByServiceCodeQuery.Data.StoreListProduct? {
      get
      set
    }
    public struct StoreListProduct : Apollo.GraphQLSelectionSet {
      public static let possibleTypes: [Swift.String]
      public static var selections: [Apollo.GraphQLSelection] {
        get
      }
      public var resultMap: Apollo.ResultMap {
        get
      }
      public init(unsafeResultMap: Apollo.ResultMap)
      public init(products: [MySabaySdk.GetProductsByServiceCodeQuery.Data.StoreListProduct.Product?])
      public var __typename: Swift.String {
        get
        set
      }
      public var products: [MySabaySdk.GetProductsByServiceCodeQuery.Data.StoreListProduct.Product?] {
        get
        set
      }
      public struct Product : Apollo.GraphQLSelectionSet {
        public static let possibleTypes: [Swift.String]
        public static var selections: [Apollo.GraphQLSelection] {
          get
        }
        public var resultMap: Apollo.ResultMap {
          get
        }
        public init(unsafeResultMap: Apollo.ResultMap)
        public init(id: Apollo.GraphQLID, name: Swift.String? = nil, salePrice: Swift.Double? = nil, currencyCode: Swift.String, isActive: Swift.Bool? = nil, properties: MySabaySdk.store_JSONObject? = nil)
        public var __typename: Swift.String {
          get
          set
        }
        public var id: Apollo.GraphQLID {
          get
          set
        }
        public var name: Swift.String? {
          get
          set
        }
        public var salePrice: Swift.Double? {
          get
          set
        }
        public var currencyCode: Swift.String {
          get
          set
        }
        public var isActive: Swift.Bool? {
          get
          set
        }
        public var properties: MySabaySdk.store_JSONObject? {
          get
          set
        }
      }
    }
  }
  @objc deinit
}
public typealias store_JSONObject = [Swift.String : Any?]
public typealias checkout_JSONObject = [Swift.String : Any?]
public typealias invoice_JSONObject = [Swift.String : Any?]
public struct MSPersona {
  public var uuid: Swift.String!
}
public struct MSStoreProductProperties {
  public var priceInSabayCoin: Swift.Int!
  public var priceInSabayGold: Swift.Int!
  public var displayName: Swift.String!
  public var packageCode: Swift.String!
}
public struct MSStoreProduct {
  public var id: Swift.String!
  public var name: Swift.String!
  public var salePrice: Swift.Double!
  public var currencyCode: Swift.String!
  public var isActive: Swift.Bool!
  public var properties: MySabaySdk.MSStoreProductProperties!
}
extension MSStoreProduct {
  public func itemData(packageId: Swift.String) -> MySabaySdk.store_JSONObject
}
public struct MSInvoice {
  public var id: Swift.String!
  public var userId: Swift.String!
  public var items: [MySabaySdk.MSInvoiceItem]
  public var amount: Swift.Double!
  public var notes: Swift.String!
  public var serviceCode: Swift.String!
  public var ssnTxHash: Swift.String?
  public var paymentProvider: Swift.String!
  public var status: Swift.String!
  public var currency: Swift.String!
}
public struct MSUserProfile {
  public var userId: Swift.Int!
  public var localPayEnabled: Swift.Bool!
  public var balances: [MySabaySdk.MSBalance]
  public var status: Swift.Int!
  public var persona: MySabaySdk.MSPersona!
}
@_hasMissingDesignatedInitializers public class Network {
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class MSAccessToken : ObjectiveC.NSObject {
  public static var isValid: Swift.Bool {
    get
  }
  public static var currentToken: MySabaySdk.MSAccessToken? {
    get
  }
  public var tokenString: Swift.String!
  public var expirationTime: Swift.Int!
  @objc override dynamic public init()
  @objc deinit
}
public enum MSEnvironment {
  case sandbox
  case production
  public static func == (a: MySabaySdk.MSEnvironment, b: MySabaySdk.MSEnvironment) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
public struct MSConfigure {
  public var theme: MySabaySdk.MSTheme!
  public var environment: MySabaySdk.MSEnvironment!
  public var serviceCode: Swift.String!
  public var appearance: MySabaySdk.MSAppearance!
  public init()
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class MSOtpField : UIKit.UITextField {
  public var otpBorderColor: UIKit.UIColor
  public var otpBorderWidth: CoreGraphics.CGFloat
  public var shapeLayer: QuartzCore.CAShapeLayer!
  @objc override dynamic public func awakeFromNib()
  public func initalizeUI(forFieldType type: MySabaySdk.MsOtpDisplayType)
  @objc override dynamic public func deleteBackward()
  @objc deinit
}
public struct MSPsProviderInfo {
  public var logo: Swift.String!
}
public struct MSPsProvider {
  public var id: Swift.String!
  public var name: Swift.String!
  public var code: Swift.String!
  public var packageId: Swift.String!
  public var label: Swift.String!
  public var value: Swift.Int!
  public var additionalBody: MySabaySdk.checkout_JSONObject?
  public var additionalHeader: MySabaySdk.checkout_JSONObject?
  public var type: MySabaySdk.MSPurchaseType!
  public var status: Swift.Int!
  public var info: MySabaySdk.MSPsProviderInfo!
  public var issueCurrencies: [Swift.String]
  public var requestUrl: Swift.String!
  public var isSelected: Swift.Bool {
    get
    set
  }
}
public struct MSServiceInfo {
  public var name: Swift.String!
  public var code: Swift.String!
  public var matomoTrackingID: Swift.String!
  public var usdkhr: Swift.Int!
}
public struct MSAppearance {
  public var title: Swift.String!
  public var primaryColor: UIKit.UIColor!
  public var secondaryColor: UIKit.UIColor!
  public init()
}
extension MySabaySdk.MsOtpDisplayType : Swift.Equatable {}
extension MySabaySdk.MsOtpDisplayType : Swift.Hashable {}
extension MySabaySdk.MsOtpDisplayType : Swift.RawRepresentable {}
extension MySabaySdk.MSOtpKeyboardType : Swift.Equatable {}
extension MySabaySdk.MSOtpKeyboardType : Swift.Hashable {}
extension MySabaySdk.MSOtpKeyboardType : Swift.RawRepresentable {}
extension MySabaySdk.MSCurrency : Swift.Equatable {}
extension MySabaySdk.MSCurrency : Swift.Hashable {}
extension MySabaySdk.MSPurchaseType : Swift.Equatable {}
extension MySabaySdk.MSPurchaseType : Swift.Hashable {}
extension MySabaySdk.MSPurchaseType : Swift.RawRepresentable {}
extension MySabaySdk.MSTheme : Swift.Equatable {}
extension MySabaySdk.MSTheme : Swift.Hashable {}
extension MySabaySdk.MSEnvironment : Swift.Equatable {}
extension MySabaySdk.MSEnvironment : Swift.Hashable {}
